{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/dashboard/dashboard-create/dashboard-create.component.html","webpack:///./src/app/dashboard/dashboard-create/dashboard-create.component.ts","webpack:///./src/app/dashboard/dashboard-edit/dashboard-edit.component.html","webpack:///./src/app/dashboard/dashboard-edit/dashboard-edit.component.ts","webpack:///./src/app/dashboard/dashboard-list/dashboard-list.component.html","webpack:///./src/app/dashboard/dashboard-list/dashboard-list.component.ts","webpack:///./src/app/dashboard/dashboard-single/dashboard-single.component.html","webpack:///./src/app/dashboard/dashboard-single/dashboard-single.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/properties/properties-list/properties-list.component.css","webpack:///./src/app/properties/properties-list/properties-list.component.html","webpack:///./src/app/properties/properties-list/properties-list.component.ts","webpack:///./src/app/properties/properties.component.css","webpack:///./src/app/properties/properties.component.html","webpack:///./src/app/properties/properties.component.ts","webpack:///./src/app/properties/property-create/property-create.component.html","webpack:///./src/app/properties/property-create/property-create.component.ts","webpack:///./src/app/properties/property-single/property-single.component.html","webpack:///./src/app/properties/property-single/property-single.component.ts","webpack:///./src/app/properties/property-update/property-update.component.html","webpack:///./src/app/properties/property-update/property-update.component.ts","webpack:///./src/app/shared/guards/auth-guard.service.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/dashboard.service.ts","webpack:///./src/app/shared/services/property.service.ts","webpack:///./src/app/shared/services/stationery.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PropertiesComponent } from './properties/properties.component';\nimport { PropertiesListComponent } from './properties/properties-list/properties-list.component';\nimport { PropertyCreateComponent } from './properties/property-create/property-create.component';\nimport { PropertySingleComponent } from './properties/property-single/property-single.component';\nimport { PropertyUpdateComponent } from './properties/property-update/property-update.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DashboardListComponent } from './dashboard/dashboard-list/dashboard-list.component';\nimport { DashboardCreateComponent } from './dashboard/dashboard-create/dashboard-create.component';\nimport { DashboardSingleComponent } from './dashboard/dashboard-single/dashboard-single.component';\nimport { DashboardEditComponent } from './dashboard/dashboard-edit/dashboard-edit.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo:'',\n    pathMatch: 'full'\n},\n{\n    path:'login',\n    component:AuthComponent,\n},\n\n{\n    path:'properties',\n   // canActivate:[AuthGuard],\n    component:PropertiesComponent,\n    // canActivateChild:[AuthGuard],\n    children:[{\n        path:'',\n        component:PropertiesListComponent\n    }\n    ,\n    {\n        path:'create',\n        component:PropertyCreateComponent,\n        //canActivate:[AuthGuard],\n    },\n    {\n        path:':id',\n        component:PropertySingleComponent\n    }\n    ,\n    {\n        path:':id/edit',\n        component:PropertyUpdateComponent\n    }\n\n    ]   \n},\n{\n    path:'dashboard',\n    //canActivate:[AuthGuard],\n    component:DashboardComponent,\n    children:[{\n        path:'',\n        component:DashboardListComponent\n    },\n    {\n        path:'create',\n        component:DashboardCreateComponent\n    }\n    ,\n    {\n        path:':id',\n        component:DashboardSingleComponent\n    },\n    {\n        path:':id/edit',\n        component:DashboardEditComponent\n    }\n\n\n    ]\n\n    \n}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class='navbar navbar-default'>\\n\\n  <div class='container-fluid'>\\n\\n    <div class='navbar-header'>\\n      <a routerLink='/home' class='navbar-brand'>RALIKU WAPP</a>\\n    </div>\\n    <div>\\n      <ul class='nav navbar-nav'>\\n        <li><a routerLink='/properties'>Properties</a></li>\\n      </ul>\\n      <ul class='nav navbar-nav'>\\n        <li><a routerLink='/dashboard'>Dashboard</a></li>\\n      </ul>\\n      <div class=\\\"container-fluid\\\">\\n        <ul class='nav navbar-nav navbar-right'>\\n          <li *ngIf=\\\"!isLoggedIn\\\"><a routerLink=\\\"/login\\\">Login</a></li>\\n          <li *ngIf=\\\"isLoggedIn\\\"><a (click)=\\\"logout()\\\">Logout</a></li>\\n          <li *ngIf=\\\"isLoggedIn\\\"><a><img src='app/images/ej.jpg' alt=\\\"profile image\\\"\\n                class=\\\"profile img-circle img-responsive\\\"></a></li>\\n        </ul>\\n      </div>\\n\\n    </div>\\n\\n\\n  </div>\\n\\n\\n\\n</nav>\\n\\n<router-outlet></router-outlet>\"","/** import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ralikuapp';\n}**/\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { Property } from './shared/models/property';\nimport { User } from './shared/models/user';\nimport { PropertyService } from './shared/services/property.service';\nimport { AuthService } from './shared/services/auth.service';\nimport { DashboardService } from './shared/services/dashboard.service';\n@Component({\n  selector: 'app-root',\n  styles: [],\n  templateUrl: './app.component.html'\n\n})\nexport class AppComponent implements OnInit {\n\n\n  teachers: Property[];\n  users: User[];\n\n  constructor(private service: PropertyService, private authService: AuthService, private dashboardService: DashboardService\n    , private router: Router) { }\n\n  ngOnInit(): void {\n    this.service.getContacts()\n      .subscribe(teachers => this.teachers = teachers,\n\n      );\n  }\n\n profile(){\n   console.log(this.dashboardService.getUsers());\n   \n }\n\n  get isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PropertiesComponent } from './properties/properties.component';\nimport { PropertiesListComponent } from './properties/properties-list/properties-list.component';\nimport { PropertyService } from './shared/services/property.service';\nimport { DashboardService } from './shared/services/dashboard.service';\nimport { StationeryService } from './shared/services/stationery.service';\nimport { HttpModule, Http, RequestOptions } from '@angular/http';\nimport { PropertyCreateComponent } from './properties/property-create/property-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PropertySingleComponent } from './properties/property-single/property-single.component';\nimport { PropertyUpdateComponent } from './properties/property-update/property-update.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthService } from './shared/services/auth.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DashboardCreateComponent } from './dashboard/dashboard-create/dashboard-create.component';\nimport { DashboardEditComponent } from './dashboard/dashboard-edit/dashboard-edit.component';\nimport { DashboardSingleComponent } from './dashboard/dashboard-single/dashboard-single.component';\nimport { DashboardListComponent } from './dashboard/dashboard-list/dashboard-list.component';\nimport { AuthGuard } from './shared/guards/auth-guard.service';\nimport { AuthHttp,AuthConfig } from 'angular2-jwt';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/throw';\n\nexport function authHttpFactory(http:Http,options:RequestOptions){\n  return new AuthHttp(new AuthConfig({\n    tokenGetter:(()=>localStorage.getItem('access_token')),\n    noJwtError:true\n  }),http,options);\n}\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PropertiesComponent,\n    PropertiesListComponent,\n    PropertyCreateComponent,\n    PropertySingleComponent,\n    PropertyUpdateComponent,\n    AuthComponent,\n    DashboardComponent,\n    DashboardCreateComponent,\n    DashboardEditComponent,\n    DashboardSingleComponent,\n    DashboardListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    AppRoutingModule\n    \n  ],\n  providers: [\n    PropertyService,\n    AuthService,\n    {\n      provide:AuthHttp,\n      useFactory:authHttpFactory,\n      deps:[Http,RequestOptions]\n    },\n    StationeryService,\n    DashboardService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div>\\n  <form (ngSubmit)=\\\"login()\\\">\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Email</label>\\n          <input class=\\\"form-control\\\" type='text' name=\\\"email\\\" [(ngModel)]='credentials.email'>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Password</label>\\n              <input class=\\\"form-control\\\" type='password' name=\\\"password\\\" [(ngModel)]='credentials.password'>\\n      </div>\\n\\n      <div *ngIf='successMessage' class=\\\"alert alert-success\\\">{{successMessage}}</div>\\n      <div *ngIf='errorMessage' class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\n      \\n  <div class=\\\"form-group\\\">\\n      <button class=\\\"form-control\\\" class='btn btn-info btn-sm'>Login</button>\\n  </div>        \\n  </form>\\n</div>\\n      \\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { Property } from '../shared/models/property';\nimport { PropertyService } from '../shared/services/property.service';\nimport { AuthService } from '../shared/services/auth.service';\n@Component({\n  templateUrl:'./auth.component.html' \n})\nexport class AuthComponent implements OnInit {\n  constructor(private authService:AuthService,private router:Router ) {}\n\n  credentials={email:'',password:''};\n  errorMessage:string='';\n  successMessage:string='';\n\n  ngOnInit() {}\n\n \n\n  login(){\n    this.errorMessage='';\n      this.authService.login(this.credentials.email,this.credentials.password)\n      .subscribe(data=>{\n        this.router.navigate(['/properties']);\n        console.log(data);\n      },\n      err=>{\n        this.errorMessage=err;\n        console.error(err)\n      }\n    );\n  }\n\n\n}\n","module.exports = \"<div *ngIf='user'>\\n  <form (ngSubmit)=\\\"createUser()\\\"> \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Email</label>\\n          <input class=\\\"form-control\\\" type='text' name=\\\"email\\\" [(ngModel)]='user.email'>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Password</label>\\n              <input class=\\\"form-control\\\" type='password' name=\\\"password\\\" [(ngModel)]='user.password'>\\n      </div>\\n\\n\\n      <div *ngIf='successMessage' class=\\\"alert alert-success\\\">{{successMessage}}</div>\\n      <div *ngIf='errorMessage' class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\n      \\n  <div class=\\\"form-group\\\">\\n      <button class=\\\"form-control\\\" class='btn btn-info btn-sm'>CreateUser</button>\\n  </div>        \\n  </form>\\n</div>       \\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { User } from '../../shared/models/user';\nimport { DashboardService } from '../../shared/services/dashboard.service';\n@Component({\n  styles:[`\n\n `],\n  templateUrl:'./dashboard-create.component.html' \n})\nexport class DashboardCreateComponent implements OnInit {\n  constructor(private router: Router,private service:DashboardService) {}\n\n  user:User={email:'',password:''};\n  errorMessage:string='';\n  successMessage:string='';\n\n  ngOnInit() {\n  }\n    \n  createUser(){\n    this.successMessage='';\n    this.errorMessage='';\n\n    this.service.createUser(this.user)\n    .subscribe(user=>{\n      this.successMessage='User was created';\n      this.router.navigate(['/dashboard']);\n      console.log('User profile created');\n    })\n  }\n\n}\n","module.exports = \"<h1>User Data Form</h1><hr>\\n<div *ngIf='user'>\\n    <form (ngSubmit)=\\\"updateUser()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Email</label>\\n            <input class=\\\"form-control\\\" type='email' name=\\\"email\\\" [(ngModel)]='user.email'>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Password</label>\\n            <input class=\\\"form-control\\\" type='password' name=\\\"password\\\" [(ngModel)]='user.password'>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Admin</label>\\n            <input class=\\\"form-control\\\" type='boolean' name=\\\"admin\\\" [(ngModel)]='user.admin'>\\n        </div>\\n\\n\\n\\n\\n        <div *ngIf='successMessage' class=\\\"alert alert-success\\\">{{successMessage}}</div>\\n        <div *ngIf='errorMessage' class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Update</button>        \\n    </form>\\n\\n</div>       \\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { User } from '../../shared/models/user';\nimport { DashboardService } from '../../shared/services/dashboard.service';\n\n@Component({\n  templateUrl:'./dashboard-edit.component.html' \n})\nexport class DashboardEditComponent implements OnInit {\n  constructor(private route: ActivatedRoute,private service:DashboardService) {}\n\n  user:User;\n  successMessage:string='';\n  errorMessage:string='';\n  \n  ngOnInit() {\n    let _id=this.route.snapshot.params['id'];\n    this.service.getUser(_id)\n    .subscribe(user=>this.user=user);\n  }\n    \n   updateUser(){\n     this.service.updateUser(this.user)\n     .subscribe(user=>{\n       //method to update date of edit\n      this.updater();\n        \n       \n       this.successMessage='Profile was updated.';\n       console.log('Profile updated');\n     },\n     err=>{\n      this.errorMessage='Contact cant be updated!';\n      console.error(err);\n     }\n    );\n    \n    this.errorMessage='';\n    this.successMessage='';\n\n   }\n\n   //date updater\n   updater(){\n    this.service.updater(this.user)\n    .subscribe(user=>{\n      //method to update date of edit\n\n      this.successMessage='Update date logged.';\n      console.log('Update date updated');\n    },\n    err=>{\n     this.errorMessage='date cant be updated!';\n     console.error(err);\n    }\n   );\n   \n   this.errorMessage='';\n   this.successMessage='';\n\n  }\n\n}\n","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>Users Dashboard</h1>\\n  <small>Authentication and Authorization is the main aim.</small><br>\\n  <button  routerLink='/dashboard/create'  class=\\\"btn btn-info\\\">Create User</button>          \\n</div>\\n<div class='contacts-list row' *ngIf=\\\"users\\\">\\n    <div class='col-sm-4' *ngFor=\\\"let u of users\\\">\\n      <div class=\\\"user-card text-center\\\" [routerLink]=\\\"['/dashboard',u._id]\\\">\\n          <div class='text-center'> <h2>{{ u.email }} <small>{{ u._id}}</small></h2></div>\\n\\n      </div>\\n     <div class=\\\"image\\\">\\n          <img class='img-responsive' [src]='u.avatar' class='img-responsive img-circle'>\\n\\n     </div>  \\n      \\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { User } from '../../shared/models/user';\nimport { DashboardService } from '../../shared/services/dashboard.service';\n@Component({\n  styles:[`\n   .user-card{cursor:pointer;\n    align-items::center;\n  }\n  .user-card:hover{\n    background:grey;\n    border-radius:20px;\n    \n  }\n\n  img{\n    width:150px;\n    height:150px;\n\n  }\n  `],\n  templateUrl:'./dashboard-list.component.html' \n})\nexport class DashboardListComponent implements OnInit {\n  users:User[];\n  ngOnInit(): void {\n    this.service.getUsers()\n    .subscribe(users=>this.users=users);\n  }\n    \n  constructor(private service: DashboardService) {}\n\n}\n","module.exports = \"<div  *ngIf=\\\"user\\\">     \\n  <div class=\\\"user-card text-center\\\">\\n      <div class='text-center'> <h2>{{ user.email }} <small>{{ user._id }}</small></h2>\\n      <div>Is Admin:{{user.admin}}</div>\\n      <div>Updated At:{{user.updatedAt}}</div>\\n      <div>Created At:{{user.createdAt}}</div>\\n      \\n      </div>\\n      \\n      <button [routerLink]=\\\"['/dashboard',user._id,'edit']\\\" class=\\\"btn btn-primary btn-bg\\\">Edit Profile</button>\\n      <button (click)=\\\"deleteUser()\\\" class=\\\"btn btn-danger btn-bg\\\">Delete User</button>\\n  </div>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute , Router} from '@angular/router';\nimport { Http } from '@angular/http';\nimport { User } from '../../shared/models/user';\nimport { DashboardService } from '../../shared/services/dashboard.service';\n\n@Component({\n  templateUrl:'./dashboard-single.component.html' \n})\nexport class DashboardSingleComponent implements OnInit {\n  constructor(private route: ActivatedRoute,\n              private router:Router,\n              private service:DashboardService) {}\n\n  user:User;\n  ngOnInit() {\n\n    let _id=this.route.snapshot.params['id'];\n    this.service.getUser(_id)\n    .subscribe(user=>this.user=user);\n  }\n    \n  deleteUser(){\n    this.service.userDelete(this.user._id)\n    .subscribe(data=>{\n      this.router.navigate(['/dashboard']);\n    })\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".user-card{cursor:pointer;\\n    align-items:center;\\n  }\\n  .user-card:hover{\\n    background:grey;\\n    border-radius:20px;\\n    \\n  }\\n  img{\\n    width:150px;\\n    height:150px;\\n\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvcGVydGllcy9wcm9wZXJ0aWVzLWxpc3QvcHJvcGVydGllcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxjQUFjO0lBQ3JCLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0UsZUFBZTtJQUNmLGtCQUFrQjs7RUFFcEI7RUFHQTtJQUNFLFdBQVc7SUFDWCxZQUFZOztFQUVkIiwiZmlsZSI6InNyYy9hcHAvcHJvcGVydGllcy9wcm9wZXJ0aWVzLWxpc3QvcHJvcGVydGllcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1jYXJke2N1cnNvcjpwb2ludGVyO1xuICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgfVxuICAudXNlci1jYXJkOmhvdmVye1xuICAgIGJhY2tncm91bmQ6Z3JleTtcbiAgICBib3JkZXItcmFkaXVzOjIwcHg7XG4gICAgXG4gIH1cblxuXG4gIGltZ3tcbiAgICB3aWR0aDoxNTBweDtcbiAgICBoZWlnaHQ6MTUwcHg7XG5cbiAgfSJdfQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h2>REALESTATE/STATIONERY APP</h2>\\n  <small>Let the app get your accomodation in Lae.</small><br>\\n  <button *ngIf='auth.isLoggedIn()' routerLink='/properties/create' class=\\\"btn btn-info\\\">Create Property</button>\\n  <button routerLink='/professionals' class=\\\"btn btn-danger\\\">More Stationery</button>\\n</div>\\n\\n<div *ngIf=\\\"teachers\\\">\\n  <div *ngFor=\\\"let c of teachers\\\" class=\\\"col-sm-4\\\">\\n    <div class=\\\"thumbnail\\\" [routerLink]=\\\"['/properties',c.id]\\\">\\n      <h2> {{ c.name }}</h2><small><i>{{c.description}}</i></small>\\n      <h4>{{c.createdAt}}</h4>\\n      <img [src]='c.listViewImage' class='img-responsive img-circle'>\\n\\n      <div class=\\\"btn btn-info pull-right\\\">Details</div>\\n      <div class=\\\"btn btn-primary pull-right\\\">Stationery Details</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PropertyService } from 'src/app/shared/services/property.service';\nimport { Property } from 'src/app/shared/models/property';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-properties-list',\n  templateUrl: './properties-list.component.html',\n  styleUrls: ['./properties-list.component.css']\n})\nexport class PropertiesListComponent implements OnInit {\n  \n  constructor(private service: PropertyService,private auth:AuthService) {}\n\n  teachers:Property[];\n  ngOnInit(): void {\n    this.service.getContacts()\n    .subscribe(teachers=>this.teachers=teachers);\n  }\n    \n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb3BlcnRpZXMvcHJvcGVydGllcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-properties',\n  templateUrl: './properties.component.html',\n  styleUrls: ['./properties.component.css']\n})\nexport class PropertiesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  \n\n}\n","module.exports = \"<div class=\\\"panel-heading text-center\\\">Add a New Property</div>\\n<div class=\\\"panel-body\\\" *ngIf='teacher'>\\n  <form [formGroup]='form' (ngSubmit)='createTeacher()'>\\n    <div class=\\\"form-group col-sm-4\\\">\\n      <label for=\\\"\\\">Name</label>\\n      <input class=\\\"form-control\\\" type='text' name=\\\"name\\\" formControlName='name' required>\\n    </div>\\n\\n    <div class=\\\"form-group col-sm-4\\\">\\n      <label for=\\\"\\\">Description</label>\\n      <input class=\\\"form-control\\\" type='text' name=\\\"Description\\\" formControlName='description' required>\\n    </div>\\n\\n    <div class=\\\"form-group col-sm-4\\\">\\n      <input type=\\\"file\\\" multiple name='avatarImage' (change)=\\\"onFileSelected($event)\\\" formControlName='avatarImage' />\\n    </div>\\n\\n\\n    <div *ngIf='successMessage' class=\\\"alert alert-success\\\">{{successMessage}}</div>\\n    <div *ngIf='errorMessage' class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\n\\n\\n    <div class=\\\"form-group col-sm-12\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Create</button>\\n    </div>\\n  </form>\\n\\n</div>\"","import { ElementRef, ViewChild, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\n//import { FileUploader, FileSelectDirective } from 'ng2-file-upload';\nimport { Property } from '../../shared/models/property';\nimport { PropertyService } from '../../shared/services/property.service';\n\n\n@Component({\n  styles: [`\n  input.ng-valid.ng-touched{\n    border-left:5px solid green;\n  }\n  input.ng-invalid.ng-touched{\n    border-left:5px solid red;\n  }\n\n `],\n  templateUrl: './property-create.component.html'\n})\n\nexport class PropertyCreateComponent implements OnInit {\n  constructor(private http: Http, private router: Router, private service: PropertyService, private fb: FormBuilder) {\n\n  }\n\n  form: FormGroup;\n  teacher: Property = { name: '', description: '', avatarImage: '' };\n  errorMessage: string = '';\n  successMessage: string = '';\n  filesToUpload: Array<File> = [];\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      description: new FormControl(''),\n      avatarImage: new FormControl('')\n    });\n  }\n\n\n\n  onFileSelected(event) {\n    this.filesToUpload = <Array<File>>event.target.files;\n  }\n\n\n\n\n\n  createTeacher() {\n    this.successMessage = '';\n    this.errorMessage = '';\n    console.log(this.form);\n    console.log(this.form.value);\n\n    const files: Array<File> = this.filesToUpload;\n    const fd = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      fd.append(\"avatarImage\", files[i], files[i]['name']);\n    }\n    fd.append('name', this.form.value.name);\n    fd.append('description', this.form.value.description);\n\n\n      //this.http.post('http://localhost:3007/teachers', fd)\n      this.http.post('https://apis.raliku.com/teachers',fd)  \n      .subscribe(res => {\n        console.log(res);\n      })\n  }\n\n\n  provinces: Array<string> = [\n    'East New Britain',\n    'West New Britain',\n    'New Ireland',\n    'Manus'\n  ];\n\n}\n\n\n","module.exports = \"<div *ngIf=\\\"teachers\\\">\\n  <div class=\\\"user-card text-center\\\">\\n      <div class='text-center'>\\n          <h2>{{ teachers.name}} <small>{{ teachers.district }}</small></h2>\\n      </div>\\n      <div class=\\\"img-parent\\\">\\n\\n          <div class='container' *ngFor='let i of teachers.avatarImage'>\\n              <img  [src]='i' class='img-responsive img-circle'>\\n          </div>\\n      </div>\\n      <div class=\\\"well well-lg\\\">{{teachers.description}}</div>\\n\\n      <button [routerLink]=\\\"['/properties',teachers._id,'edit']\\\" class=\\\"btn btn-primary btn-bg\\\">Edit</button>\\n      <button (click)=\\\"teacherDelete()\\\" class=\\\"btn btn-danger btn-bg\\\">Delete</button>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute , Router} from '@angular/router';\nimport { Http } from '@angular/http';\nimport { Property } from '../../shared/models/property';\nimport { PropertyService } from '../../shared/services/property.service';\n\n@Component({\n  styles:[\n\n  ],\n  templateUrl:'./property-single.component.html' \n})\nexport class PropertySingleComponent implements OnInit {\n  constructor(private route: ActivatedRoute,\n              private router:Router,\n              private service:PropertyService) {}\n          \n\n  teachers:Property;\n  ngOnInit() {\n    let _id=this.route.snapshot.params['id'];\n    this.service.getContact(_id)\n    .subscribe(teachers=>this.teachers=teachers);\n  }\n    \n  teacherDelete(){\n    this.service.teacherDelete(this.teachers._id)\n    .subscribe(data=>{\n      this.router.navigate(['/properties']);\n    })\n  }\n\n}\n","module.exports = \"<div *ngIf='teacher'>\\n  <form (ngSubmit)=\\\"updateContact()\\\">\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Name</label>\\n          <input class=\\\"form-control\\\" type='text' name=\\\"name\\\" [(ngModel)]='teacher.name'>\\n      </div>\\n      <div>\\n          <label for=\\\"\\\">description</label>\\n          <input class=\\\"form-control\\\" type='textarea' name=\\\"description\\\" [(ngModel)]='teacher.description'>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Created At</label>\\n          <input class='form-control' type='text' name=\\\"createdAt\\\" [(ngModel)]='teacher.createdAt'>\\n      </div>\\n\\n\\n      <div *ngIf='successMessage' class=\\\"alert alert-success\\\">{{successMessage}}</div>\\n      <div *ngIf='errorMessage' class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Update</button>\\n  </form>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Property } from '../../shared/models/property';\nimport { PropertyService } from '../../shared/services/property.service';\n\n@Component({\n  templateUrl:'./property-update.component.html' \n})\nexport class PropertyUpdateComponent implements OnInit {\n  constructor(private route: ActivatedRoute,private service:PropertyService) {}\n\n  teacher:Property;\n  successMessage:string='';\n  errorMessage:string='';\n  \n  ngOnInit() {\n    let _id=this.route.snapshot.params['id'];\n    this.service.getContact(_id)\n    .subscribe(teacher=>this.teacher=teacher);\n  }\n    \n   updateContact(){\n     this.service.updateContact(this.teacher)\n     .subscribe(teacher=>{\n       this.successMessage='Profile was updated.';\n       console.log('Profile updated');\n     },\n     err=>{\n      this.errorMessage='Contact cant be updated!';\n      console.error(err);\n     }\n    );\n    \n    this.errorMessage='';\n    this.successMessage='';\n\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate,CanActivateChild,Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate,CanActivateChild{\n   constructor(private router:Router,public authService:AuthService){}\n\n    canActivate():boolean {\n        console.log('check is in progress');\n        if (this.authService.isLoggedIn()){\n            return true;\n        }\n        else{\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n\n\n    canActivateChild():boolean {\n        console.log('check child router is in progress');\n        if (this.authService.isLoggedIn()){\n            return true;\n        }\n        else{\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}","import { Component, OnInit,NgModule } from '@angular/core';\nimport { Http,Response } from '@angular/http';\nimport {AuthHttp,JwtHelper} from 'angular2-jwt';\nimport { Observable } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Component({\n  \n})\nexport class AuthService {\n    //private authUrl='http://localhost:3007/users/login';\n   private authUrl='https://apis.raliku.com/users/login';\n    private loggedIn: boolean=false;\n     private token = localStorage.getItem('token');\n\n  constructor( private authHttp:AuthHttp) {\n    this.loggedIn=!!localStorage.getItem('token');\n  }\n\n  isLoggedIn(){\n      return this.loggedIn;\n  }\n\n\n  login(email:string,password:string):Observable<string>{\n    return this.authHttp.post(`${this.authUrl}`,{email,password})\n    .pipe(map(res=>res.json()),\n    tap(res=>{\n      //const expiresAt=JSON.stringify(((this.jwtHelper.decodeToken(this.token)).exp) * 1000 + new Date().getTime());\n      if (res.token) {\n      localStorage.setItem('token',res.token);\n      //localStorage.setItem('expiresAt',expiresAt);\n      this.loggedIn=true;\n\n      this.useJwtHelper();\n      \n    }\n\n    })\n    ,catchError(this.handleError));\n    \n  }\n  \n //logout\n logout(){\n   localStorage.removeItem('token');\n   this.loggedIn=false;\n }\n\n//testing\n\njwtHelper: JwtHelper = new JwtHelper();\n\nuseJwtHelper() {\n  var token = localStorage.getItem('token');\n  //var expirationDate=this.jwtHelper.getTokenExpirationDate(token);\n  //const decodedTkn=this.jwtHelper.decodeToken(token).exp;\n  console.log(\n    this.jwtHelper.decodeToken(token),\n    this.jwtHelper.getTokenExpirationDate(token),\n    this.jwtHelper.isTokenExpired(token)\n    \n  );\n}\n\n    \n//handle errors\nprivate handleError(err){\n  let errMessage:string;\n  if(err instanceof Response){\n      let body=err.json() || '';\n      let error=body.error || JSON.stringify(body);\n      errMessage=`${err.status}-${err.statusText || ''} ${error}`;\n  }\n  else{\n      errMessage = err.message ? err.message: err.toString();\n  }\nreturn Observable.throw(errMessage);\n}\n\n\nngOnInit() {}\n\n\n}","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { User } from '../models/user';\nimport 'rxjs/add/operator/map';\nimport { Observable,Subject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable()\n\nexport class DashboardService{\n    //private url:string='http://localhost:3007/users';\n    private url='https://apis.raliku.com.com/users';\n    //observable source\n    private userDeletedSource=new Subject();\n    private userCreatedSource=new Subject<User>();\n    //observable stream\n    userCreated$=this.userCreatedSource.asObservable();\n    userDeleted$=this.userDeletedSource.asObservable();\n    \n    constructor( private http: Http){}\n    \n\n\n //all contacts\ngetUsers():Observable<User[]>{\n    return this.http.get(this.url)\n    .pipe(map(res=>res.json()),\n    catchError(this.handleError));\n}\n\nprivate handleError(err){\n    let errMessage:string;\n    if(err instanceof Response){\n        let body=err.json() || '';\n        let error=body.error || JSON.stringify(body);\n        errMessage=`${err.status}-${err.statusText || ''} ${error}`;\n    }\n    else{\n        errMessage = err.message ? err.message: err.toString();\n    }\n return Observable.throw(errMessage);\n}\n\n//get single contact\ngetUser(id):Observable<User>{\n return this.http.get(`${this.url}/${id}`)\n .pipe(map(res=>res.json()),\n catchError(this.handleError));\n}\n\n//get single user profile image\ngetUserProfile(id):Observable<User>{\n    return this.http.get(`${this.url}/${id}`)\n    .pipe(map(res=>res.json()),\n    catchError(this.handleError));\n   }\n   \n\n\n//update user details\nupdateUser(user:User):Observable<User>{\nreturn this.http.put(`${this.url}/${user._id}`,user)\n.pipe(map(user=>user.json()),\ncatchError(this.handleError))\n}\n\n\n//update user details\nupdater(user:User):Observable<User>{\n    return this.http.put(`${this.url}/update/${user._id}`,user)\n    .pipe(map(user=>user.json()),\n    catchError(this.handleError))\n    }\n    \n\n\n\ncreateUser(user:User):Observable<User>{\n    return this.http.post(`${this.url}/signup`,user)\n    .pipe(map(res=>res.json()),\n    tap(user=>this.userCreated(user))\n    ,catchError(this.handleError));\n}\n\nuserDelete(id:number):Observable<any>{\n    return this.http.delete(`${this.url}/${id}`)\n    .pipe(tap(res=>this.userDeleted()),\n    catchError(this.handleError));\n}\n\n//messages\nuserCreated(teacher:User){\n    console.log('New Teacher has been created!');\n    this.userCreatedSource.next(teacher);\n}\n\nuserDeleted(){\n    this.userDeletedSource.next();\n    console.log('Teacher has been deleted!');\n}\n\n}","/** import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyService {\n\n  constructor() { }\n}**/\n\nimport { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Property } from '../models/property';\nimport { Observable,Subject } from 'rxjs';\nimport { map,catchError, tap } from 'rxjs/operators';\n\n@Injectable()\n\nexport class PropertyService{\n    //private url:string='http://localhost:3007/teachers';\n   \n   private url='https://apis.raliku.com/teachers'; \n   //observable source\n    private contactDeletedSource=new Subject();\n    private contactCreatedSource=new Subject<Property>();\n    \n    private config = { headers: { 'Content-Type': 'multipart/form-data' } };\n\n    //observable stream\n    contactCreated$=this.contactCreatedSource.asObservable();\n    contactDeleted$=this.contactDeletedSource.asObservable();\n    \n    constructor( private http: Http){}\n    \n //all contacts\ngetContacts():Observable<Property[]>{\n    return this.http.get(`${this.url}`)\n    .pipe(map(res=>res.json().teachers),\n     catchError(this.handleError));\n}\nprivate handleError(err){\n    let errMessage:string;\n    if(err instanceof Response){\n        let body=err.json() || '';\n        let error=body.error || JSON.stringify(body);\n        errMessage=`${err.status}-${err.statusText || ''} ${error}`;\n    }\n    else{\n        errMessage = err.message ? err.message: err.toString();\n    }\n return Observable.throw(errMessage);\n}\n\n//get single contact\ngetContact(id):Observable<Property>{\n return this.http.get(`${this.url}/${id}`)\n .pipe(map(res=>res.json()),\n catchError(this.handleError));\n}\n\n//update user details\nupdateContact(teacher:Property):Observable<Property>{\nreturn this.http.put(`${this.url}/${teacher._id}`,teacher)\n.pipe(map(teacher=>teacher.json()),\ncatchError(this.handleError))\n}\n\ncreateTeacher(teacher:Property):Observable<Property>{\n    return this.http.post(this.url,teacher)\n    .pipe(map(res=>res.json()),\n    tap(teacher=>this.teacherCreated(teacher)),\n    catchError(this.handleError));\n}\n\nteacherDelete(id:number):Observable<any>{\n    return this.http.delete(`${this.url}/${id}`)\n    .pipe(tap(res=>this.teacherDeleted()),\n    catchError(this.handleError));\n}\n\n//messages\nteacherCreated(teacher:Property){\n    console.log('New Property has been created!');\n    this.contactCreatedSource.next(teacher);\n}\n\nteacherDeleted(){\n    this.contactDeletedSource.next();\n    console.log('Property has been deleted!');\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Stationery } from '../models/stationery';\nimport 'rxjs/add/operator/map';\nimport { Observable,Subject } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\n@Injectable()\n\nexport class StationeryService{\n    //private url:string='http://localhost:3007/professionals';\n    private url='https://apis.raliku.com/professionals';\n    //observable source\n    private deletedProfessionalSource=new Subject();\n    private createdProfessionalSource=new Subject<Stationery>();\n    //observable stream\n    createdProfessional$=this.createdProfessionalSource.asObservable();\n    deletedProfessional$=this.deletedProfessionalSource.asObservable();\n    \n    constructor( private http: Http){}\n    \n //all contacts\ngetProfessionals():Observable<Stationery[]>{\n    return this.http.get(`${this.url}`)\n    .pipe(map(res=>res.json().professionals),\n    catchError(this.handleError));\n}\nprivate handleError(err){\n    let errMessage:string;\n    if(err instanceof Response){\n        let body=err.json() || '';\n        let error=body.error || JSON.stringify(body);\n        errMessage=`${err.status}-${err.statusText || ''} ${error}`;\n    }\n    else{\n        errMessage = err.message ? err.message: err.toString();\n    }\n return Observable.throw(errMessage);\n}\n\n//get single contact\ngetProfessional(id):Observable<Stationery>{\n return this.http.get(`${this.url}/${id}`)\n .pipe(map(res=>res.json()),\n catchError(this.handleError));\n}\n\n//update user details\nupdateProfessional(professional:Stationery):Observable<Stationery>{\nreturn this.http.put(`${this.url}/${professional._id}`,professional)\n.pipe(map(teacher=>teacher.json()),\ncatchError(this.handleError))\n}\n\n\ncreateProfessional(teacher:Stationery):Observable<Stationery>{\n    return this.http.post(this.url,teacher)\n    .pipe(map(res=>res.json()),\n    tap(teacher=>this.createdProfessional(teacher)),\n    catchError(this.handleError));\n}\n\n\ndeleteProfessional(id:number):Observable<any>{\n    return this.http.delete(`${this.url}/${id}`)\n    .pipe(tap(res=>this.deletedProfessional()),\n    catchError(this.handleError));\n}\n\n//messages\ncreatedProfessional(teacher:Stationery){\n    console.log('New Stationery has been created!');\n    this.createdProfessionalSource.next(teacher);\n}\n\ndeletedProfessional(){\n    this.deletedProfessionalSource.next();\n    console.log('Teacher has been deleted!');\n}\n\n\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}